{"ast":null,"code":"var _jsxFileName = \"/Users/sumitkumar/Downloads/React/reactquery/src/components/RQSuperHeroes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchHeroes = () => {\n  return axios.get(\"http://localhost:4000/superheroes\");\n};\nconst RQSuperHeroes = () => {\n  _s();\n  const [polling, setPolling] = useState(true);\n  const {\n    isLoading,\n    data,\n    isError,\n    error,\n    refetch\n  } = useQuery(\"super-heroes\", fetchHeroes, {\n    refetchInterval: polling ? 5000 : false,\n    // Set interval or disable polling\n    refetchIntervalInBackground: true,\n    onSuccess: response => {\n      setPolling(false); // Stop polling on success\n      console.log(\"Success\", response);\n      console.log(response.data.length);\n    },\n    onError: error => {\n      setPolling(false); // Stop polling on error\n      console.log(\"Error\", error);\n    }\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"RQSuperHeroes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refetch(),\n      children: \"Refetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), data === null || data === void 0 ? void 0 : data.data.map(hero => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hero.name\n      }, hero.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(RQSuperHeroes, \"+qJc/H9hm5MfQdbKtj4x6RfC3gc=\", false, function () {\n  return [useQuery];\n});\n_c = RQSuperHeroes;\nexport default RQSuperHeroes;\nvar _c;\n$RefreshReg$(_c, \"RQSuperHeroes\");","map":{"version":3,"names":["React","useState","axios","useQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchHeroes","get","RQSuperHeroes","_s","polling","setPolling","isLoading","data","isError","error","refetch","refetchInterval","refetchIntervalInBackground","onSuccess","response","console","log","length","onError","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onClick","map","hero","name","_c","$RefreshReg$"],"sources":["/Users/sumitkumar/Downloads/React/reactquery/src/components/RQSuperHeroes.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nconst fetchHeroes = () => {\n  return axios.get(\"http://localhost:4000/superheroes\");\n};\n\nconst RQSuperHeroes = () => {\n  const [polling, setPolling] = useState(true);\n\n  const { isLoading, data, isError, error, refetch } = useQuery(\n    \"super-heroes\",\n    fetchHeroes,\n    {\n      refetchInterval: polling ? 5000 : false, // Set interval or disable polling\n      refetchIntervalInBackground: true,\n      onSuccess: (response) => {\n        setPolling(false); // Stop polling on success\n        console.log(\"Success\", response);\n        console.log(response.data.length);\n      },\n      onError: (error) => {\n        setPolling(false); // Stop polling on error\n        console.log(\"Error\", error);\n      },\n    }\n  );\n\n  if (isLoading) {\n    return <h2>Loading...</h2>;\n  }\n  if (isError) {\n    return <h2>{error.message}</h2>;\n  }\n\n  return (\n    <>\n      <h2>RQSuperHeroes</h2>\n      <button onClick={() => refetch()}>Refetch</button>\n      {data?.data.map((hero) => {\n        return <div key={hero.name}>{hero.name}</div>;\n      })}\n    </>\n  );\n};\n\nexport default RQSuperHeroes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,OAAON,KAAK,CAACO,GAAG,CAAC,mCAAmC,CAAC;AACvD,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM;IAAEa,SAAS;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGf,QAAQ,CAC3D,cAAc,EACdK,WAAW,EACX;IACEW,eAAe,EAAEP,OAAO,GAAG,IAAI,GAAG,KAAK;IAAE;IACzCQ,2BAA2B,EAAE,IAAI;IACjCC,SAAS,EAAGC,QAAQ,IAAK;MACvBT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACnBU,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACP,IAAI,CAACU,MAAM,CAAC;IACnC,CAAC;IACDC,OAAO,EAAGT,KAAK,IAAK;MAClBJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACnBU,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEP,KAAK,CAAC;IAC7B;EACF,CACF,CAAC;EAED,IAAIH,SAAS,EAAE;IACb,oBAAOT,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC5B;EACA,IAAIf,OAAO,EAAE;IACX,oBAAOX,OAAA;MAAAsB,QAAA,EAAKV,KAAK,CAACe;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,oBACE1B,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMf,OAAO,CAAC,CAAE;MAAAS,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAACmB,GAAG,CAAEC,IAAI,IAAK;MACxB,oBAAO9B,OAAA;QAAAsB,QAAA,EAAsBQ,IAAI,CAACC;MAAI,GAArBD,IAAI,CAACC,IAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC;IAC/C,CAAC,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACpB,EAAA,CArCID,aAAa;EAAA,QAGoCP,QAAQ;AAAA;AAAAkC,EAAA,GAHzD3B,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}